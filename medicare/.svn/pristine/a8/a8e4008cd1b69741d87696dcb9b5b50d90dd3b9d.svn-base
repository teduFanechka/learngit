package yibao.yiwei.service.impl;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.text.ParseException;
import java.util.Date;

import org.hibernate.exception.DataException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import yibao.yiwei.dao.IBaseDao;
import yibao.yiwei.entity.Checkdetail;
import yibao.yiwei.entity.system.Errorlog;
import yibao.yiwei.service.ICheckdetailManager;

/**
 * 检查、检验结果详细
 * @author Administrator
 *
 */
@SuppressWarnings("unchecked")
@Service
@Transactional
public class CheckdetailManager implements ICheckdetailManager {
	
	@Autowired
	private IBaseDao baseDao;
	
	/**
	 * 添加检查、检验结果详细
	 */
	@Override
	public void addCheckdetail(String path, String cusId, String cusName, Date upCollectdate, int upId,String fileName) throws IOException, ParseException {
		BufferedReader bufr = null;
		int count = 0;// 定义当行行号
		int error = 0;
		String line = null;// 定义当前行
		String[] name = null;// 定义当前行String数组
		Checkdetail checkdetail;
		Errorlog errorlog;
		String qsql = "update Uploadfile set isHandle=1,upCount=?0,upName=?1 where upId=?2";
		try {
			File file = new File(path);
			if (file.isFile()) {
				bufr = new BufferedReader(new FileReader(file));
				while ((line = bufr.readLine()) != null) {
					name = line.split("##");
					// 上传文件解析不正确,可能为数据不全
					if (name.length < 9) {
						throw new DataException("正确字段总数:9,实际解析字段数:" + name.length + ",字段不全解析停止", null);
					}
					for (int i = 0; i < name.length; i++) {
						if (null != name[i] && name[i].trim().equals("NULL")){
							name[i] = "";
						}
					}
					try{
						checkdetail = new Checkdetail();
						checkdetail.setCusId(cusId);// 获取上级编码
						checkdetail.setCusDareway(""); // 医院编码
						checkdetail.setCtAddtime(new Date());// 创建日期
						checkdetail.setCtPicktime(upCollectdate);// 采集日期从传来的文件采集时间获取
						checkdetail.setCtCheckno(name[0].trim());// 检查流水号
						checkdetail.setCtHospno(name[1].trim());// 住院号/门诊号
						checkdetail.setCtItemcode(name[2].trim());// 项目编码
						checkdetail.setCtItemname(name[3].trim());// 项目名称
						checkdetail.setCtResult(name[4].trim());// 结果
						checkdetail.setCtUnit(name[5].trim());// 单位
						checkdetail.setCtPoint(name[6].trim());// 提示
						checkdetail.setCtRange(name[7].trim());// 参考范围
						checkdetail.setCtComment(name[8].trim());// 备注
						baseDao.save(checkdetail);
						count++;
					} catch (Exception e) {
						error++;
						if(error <= 5){//只记录文件的5行错误
							String log = e.toString();
							if (log.length() > 300){
								log = log.substring(0, 300);
							}
							errorlog = new Errorlog();
							errorlog.setCusId(cusId);
							errorlog.setCusName(cusName);
							errorlog.setErrAddtime(new Date());
							errorlog.setErrFileflag("检查检验详细");
							errorlog.setErrFilepath(fileName);
							errorlog.setErrLog(log + "\n错误行号:" + (count+error) + ",当前错误行内容:\n" + line);
							errorlog.setErrType("数据解析错误");
							baseDao.save(errorlog);
						}
					}
				}
				String info;
				if(count > 0 && error == 0){
					info = "<font color='green'>全部成功，共"+count+"条</font>";
				} else if(count ==0 && error > 0){
					info = "<font color='red'>全部失败，共"+error+"条</font>";
				} else {
					info = "<font color='green'>成功"+count+"条，</font><font color='red'>失败"+error+"条</font>";
				}
				baseDao.updateOrDelete(qsql, count,info,upId);
			} else {
				baseDao.updateOrDelete(qsql,0,"<font color='red'>非文件</font>", upId);
			}
		} catch (Exception e) {
			String log = e.toString();
			if (log.length() > 300){
				log = log.substring(0, 300);
			}
			errorlog = new Errorlog();
			errorlog.setCusId(cusId);
			errorlog.setCusName(cusName);
			errorlog.setErrAddtime(new Date());
			errorlog.setErrFileflag("检查检验详细");
			errorlog.setErrFilepath(fileName);
			if (null !=name && name.length < 9) {
				errorlog.setErrType("数据上传字段不全错误");
				errorlog.setErrLog(log);
				baseDao.updateOrDelete(qsql,0,"<font color='red'>数据上传字段不全错误,正确字段数:,实际解析字段数:9" + name.length + "</font>", upId);
			} else {
				errorlog.setErrType("数据解析错误");
				errorlog.setErrLog(log + "\n错误行号:" + (count+1) + "  当前错误行内容:\n" + line);
				baseDao.updateOrDelete(qsql,0,"<font color='red'>数据解析错误</font>", upId);
			}
			baseDao.save(errorlog);
		} finally {
			if (bufr != null) {
				bufr.close();
			}
		}
	}
}

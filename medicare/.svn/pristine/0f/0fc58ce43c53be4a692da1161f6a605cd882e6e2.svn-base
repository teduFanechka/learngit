package yibao.yiwei.service.impl;

import java.io.Serializable;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import yibao.yiwei.dao.IBaseDao;
import yibao.yiwei.service.IBaseService;

@Service
@Transactional
public class BaseService<T> implements IBaseService<T> {
	
	@Autowired
	private IBaseDao<T> baseDao;
	
	/**
	 * 查询
	 */
	@Override
	public List<T> findAll(Class<T> entityClazz) {
		return baseDao.findAll(entityClazz);
	}

	/**
	 * 统计
	 */
	@Override
	public int findCount(Class<T> entityClazz) {
		return baseDao.findCount(entityClazz);
	}
	
	/**
	 * 根据ID查询
	 */
	@Override
	public T get(Class<T> entityClazz, Serializable id) {
		return baseDao.get(entityClazz, id);
	}

	/**
	 * 保存
	 */
	@Override
	public Serializable save(T entity) {
		return baseDao.save(entity);
	}

	/**
	 * 保存或更新
	 */
	@Override
	public void update(T entity) {
		baseDao.update(entity);
	}

	/**
	 * 删除
	 */
	@Override
	public void delete(T entity) {
		baseDao.delete(entity);
	}

	/**
	 * 根据ID删除
	 */
	@Override
	public void delete(Class<T> entityClazz, Serializable id) {
		baseDao.delete(entityClazz, id);
	}
	
	/**
	 * hql查询
	 */
	@Override
	public List<T> find(String hql, Object... objects) {
		return baseDao.find(hql, objects);
	}
	
	/**
	 * hql统计
	 */
	@Override
	public int findCount(String hql, Object... objects) {
		return baseDao.findCount(hql, objects);
	}
	
	/**
	 * hql分页
	 */
	@Override
	public List<T> findByPage(String hql, String rows, String page, Object... objects) {
		int currentpage = Integer.parseInt((null == page || page.equals("0")) ? "1" : page);
		int pageSize = Integer.parseInt((null == rows || rows.equals("0")) ? "10" : rows);
		return baseDao.findByPage(hql, currentpage, pageSize, objects);
	}
	
	/**
	 * hql增删改
	 */
	@Override
	public int updateOrDelete(String hql, Object... objects) {
		return baseDao.updateOrDelete(hql, objects);
	}
	
	/**
	 * sql查询
	 */
	@Override
	public List<T> findSql(String sql, Object... objects) {
		return baseDao.findSql(sql, objects);
	}
	
	/**
	 * sql查询转换实体
	 */
	public List<T> findSql2(String sql,String tableName,Class<T> entityClazz, Object... objects) {
		return baseDao.findSql2(sql,tableName,entityClazz,objects);
	}
	
	/**
	 * sql统计
	 */
	@Override
	public int findCountSql(String hql, Object... objects) {
		return baseDao.findCountSql(hql, objects);
	}
	
	/**
	 * sql分页
	 */
	@Override
	public List<T> findByPageSql(String sql, String rows, String page, Object... objects) {
		int currentpage = Integer.parseInt((null == page || page.equals("0")) ? "1" : page);
		int pageSize = Integer.parseInt((null == rows || rows.equals("0")) ? "10" : rows);
		return baseDao.findByPageSql(sql, currentpage, pageSize, objects);
	}
	
	/**
	 * sql增删改
	 */
	@Override
	public int updateOrDeleteSql(String sql, Object... objects) {
		return baseDao.updateOrDeleteSql(sql, objects);
	}
	
	/**
	 * 悲观锁查询
	 */
	@Override
	public List<T> find2(String hql,String entity) {
		return baseDao.find2(hql, entity);
	}
	
	@Override
	public List<T> findDto(String sql,Class<T> entityClazz){
		return baseDao.findDto(sql, entityClazz);
	}
	
	@Override
	public List<T> findDto2(String sql,Class<T> entityClazz){
		return baseDao.findDto2(sql, entityClazz);
	}
}

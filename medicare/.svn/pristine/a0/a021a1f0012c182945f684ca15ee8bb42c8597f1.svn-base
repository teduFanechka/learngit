package yibao.yiwei.service.impl;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.text.ParseException;
import java.util.Date;

import org.hibernate.exception.DataException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import yibao.yiwei.dao.IBaseDao;
import yibao.yiwei.entity.Dischargediag;
import yibao.yiwei.entity.system.Errorlog;
import yibao.yiwei.service.IDischargediagManager;

@SuppressWarnings("unchecked")
@Service
@Transactional
public class DischargediagManager implements IDischargediagManager {
	
	@Autowired
	private IBaseDao baseDao;
	

	// 批量解析
	@Override
	public boolean addDischargediag(String path, String cusId, String cusName, Date upCollectdate, int upId) throws IOException, ParseException {
		BufferedReader bufr = null;
		int count = 0;// 定义当行行号
		boolean b = false;// 定义解析是否正常
		String line = null;// 定义当前行
		String[] name = null;// 定义当前行String数组
		Dischargediag dischargediag;
		try {
			File file = new File(path);
			if (file.isFile()) {
				bufr = new BufferedReader(new FileReader(file));
				while ((line = bufr.readLine()) != null) {
					name = line.split("##");
					// 上传文件解析不正确,可能为数据不全
					if (name.length < 6) {
						throw new DataException("异常信息:正确字段总数:6,实际解析字段数:" + name.length + ",数据不全解析停止", null);
					}
					for (int i = 0; i < name.length; i++) {
						if (name[i].trim().equals("NULL")){
							name[i] = "";
						}
					}
					dischargediag = new Dischargediag();
					dischargediag.setCusId(cusId);// 获取上级编码
					dischargediag.setCusDareway(""); // 医院编码
					dischargediag.setDdAddtime(new Date());// 创建日期
					dischargediag.setDdPicktime(upCollectdate);// 采集日期从传来的文件采集时间获取
					dischargediag.setDdCaseno(name[0].trim());// 病案号
					dischargediag.setDdHospno(name[1].trim());// 住院号
					dischargediag.setDdDisdiag(name[2].trim());// 出院诊断
					dischargediag.setDdDiseasecode(name[3].trim());// 疾病编码
					dischargediag.setDdOutstatus(name[4].trim());// 出院情况
					dischargediag.setDdDiagtype(name[5].trim());// 诊断类别
					baseDao.save(dischargediag);
					count++;
				}
				String upHql = "update Uploadfile u set u.upCount=?0 where u.upId=?1 ";
				baseDao.updateOrDelete(upHql, count, upId);
				b = true;
			}
		} catch (Exception e) {
			String log = e.toString();
			if (log.length() > 400){
				log = log.substring(0, 300);
			}
			Errorlog errorlog = new Errorlog();
			errorlog.setCusId(cusId);
			errorlog.setCusName(cusName);
			errorlog.setErrAddtime(new Date());
			errorlog.setErrFileflag("病案首页(出院诊断)表");
			errorlog.setErrFilepath(path);
			errorlog.setErrLog(log + "\n错误行号:" + (count+1) + "  当前错误行内容:\n" + line);
			if (null !=name && name.length < 6) {
				errorlog.setErrType("数据上传字段不全错误");
			} else {
				errorlog.setErrType("数据解析错误");
			}
			baseDao.save(errorlog);
		} finally {
			if (bufr != null) {
				bufr.close();
			}
		}
		return b;
	}
}

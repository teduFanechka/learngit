package yibao.yiwei.controller.system;

import java.io.IOException;
import java.text.ParseException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import yibao.yiwei.entity.system.PrivilegeRole;
import yibao.yiwei.entity.system.Role;
import yibao.yiwei.service.IBaseService;

@SuppressWarnings("unchecked")
@Controller
public class RoleController {

	@Autowired
	private IBaseService baseService;
	
	@AuthPassport
	@RequestMapping("/toRole")
	public String toRole(HttpServletRequest request) {
		return "/privilege/role";
	}
	
	@ResponseBody
	@RequestMapping("/getAllRole")
	public Map getAllRole(HttpServletRequest request, HttpServletResponse response) throws IOException {
		Map<String, Object> map = new HashMap<String, Object>();
		List list;
		String rows = request.getParameter("rows");// 每页显示的记录数
		String page = request.getParameter("page");// 当前第几页
		String hql = "from Role order by roOrder";// 注意hql
		list = baseService.findByPage(hql, rows, page);
		int count = (int) baseService.findCount(Role.class);
		map.put("total", count);
		map.put("rows", list);
		return map;
	}
	
	@ResponseBody
	@RequestMapping("/addOrUpdateRole")
	public Map addOrUpdateRole(Role role, HttpServletRequest request, HttpServletResponse response) throws ParseException {
		Map<String, Object> map = new HashMap<String, Object>();
		String status;
		if (role.getRoId().equals("")) {
			status = "添加完成";
			baseService.save(role);
		} else {
			baseService.update(role);
			status = "更新完成";

		}
		map.put("status", status);
		return map;
	}
	
	@ResponseBody
	@RequestMapping("/delRole")
	public void delRole(HttpServletRequest request, HttpServletResponse response) {
		String ids = request.getParameter("ids");
		String arr[] = ids.split(",");
		String hql = "delete PrivilegeRole where roId=?0";
		String hql2 = "delete RoleManager where roId=?0";
		for (int i = 0; i < arr.length; i++) {
			String roId = arr[i];
			baseService.delete(Role.class, roId);
			baseService.updateOrDelete(hql,roId);
			baseService.updateOrDelete(hql2,roId);
		}
	}
	
	/**
	 * 查询角色
	 * @param request
	 * @return
	 */
	@ResponseBody
	@RequestMapping("/getPriRoList")
	public Map getPriRoList(HttpServletRequest request) {
		Map<String, Object> map = new HashMap<String, Object>();
		String roId = request.getParameter("roId");
		String hql = "select priId from PrivilegeRole where roId=?0";
		List list = baseService.find(hql,roId);
		if (list.size() < 1){
			list = null;
		}
		map.put("list", list);
		return map;
	}
	
	@ResponseBody
	@RequestMapping("/addPriRo")
	public Map addPriRo(HttpServletRequest request) {
		Map<String, Object> map = new HashMap<String, Object>();
		String status = "";
		String roId = request.getParameter("roId");
		String privileges = request.getParameter("privileges");// 获取区划编码串
		String hql = "delete PrivilegeRole where roId=?0";
		baseService.updateOrDelete(hql,roId);//先删除
		if (!(privileges == null || privileges.equals(""))) {// 添加新的区划关系
			String arr[] = privileges.split(",");
			PrivilegeRole privilegeRole;
			for (int i = 0; i < arr.length; i++) {
				String priId = arr[i];
				privilegeRole = new PrivilegeRole();
				privilegeRole.setPriId(priId);
				privilegeRole.setRoId(roId);
				baseService.save(privilegeRole);
			}
			status = "修改完成";
		} else {
			status = "删除完成";
		}
		map.put("status", status);
		return map;
	}
}

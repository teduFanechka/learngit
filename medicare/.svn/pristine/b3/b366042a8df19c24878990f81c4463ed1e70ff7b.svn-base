package yibao.yiwei.service.impl;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;

import org.hibernate.exception.DataException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import yibao.yiwei.dao.IBaseDao;
import yibao.yiwei.entity.Hcconsume;
import yibao.yiwei.service.IHcconsumeManager;
import yibao.yiwei.service.IHcusersManager;

//医保刷卡信息表
@SuppressWarnings("unchecked")
@Service
@Transactional
public class HcconsumeManager implements IHcconsumeManager {
	
	@Autowired
	private IBaseDao baseDao;
	
	@Autowired
	private IHcusersManager hcusersManager;
	

	// 根据上传文件路径批量保存hcconsume 和hcusers
	@Override
	public boolean addHcconsumesHcusers(String path, String cusId,int upId) throws IOException, ParseException {
		FileReader fr;
		BufferedReader bufr = null;
		int count = 0;// 定义当行行号
		boolean b = false;// 定义解析是否正常
		String line = null;
		Hcconsume hcconsume;
		try {
			File file = new File(path);
			if (file.isFile()) {
				fr = new FileReader(file);
				bufr = new BufferedReader(fr);
				while ((line = bufr.readLine()) != null) {
					String[] name = line.split("##");
					// 上传文件解析不正确,可能为数据不全
					if (name.length < 7) {
						System.out.println("当前行错误行:" + line);
						throw new DataException("异常信息:正确字段总数:8,实际解析字段数:" + name.length + ",数据不全解析停止", null);
					}
					for (int i = 0; i < name.length; i++) {
						if (null != name[i] && name[i].trim().equals("NULL")){
							name[i] = "";
						}
					}
					try{
						//保存hcusers
						String hcuHcnum = name[1];// 医保卡号
						String hcuName = name[2];// 姓名
						String hcuSex = name[3];// 性别
						String hcuIdnum = name[4];// 身份证号
						// 参数: 医保卡号,患者姓名,性别,身份证号,返回hcuId
						String hcuId = hcusersManager.addHcusers(hcuHcnum, hcuName, hcuSex, hcuIdnum, count);
						//保存hcconsume开始
						hcconsume = new Hcconsume();
						hcconsume.setCusId(cusId);
						hcconsume.setCusParentid("0");
						hcconsume.setSoNo(name[0]);
						hcconsume.setHcuHcnum(name[1]);
						hcconsume.setHcuId(hcuId);// 获取刚刚插入的hcusers主键hcuId
						hcconsume.setHccOperator(name[5]);
						String hccDatetime = name[6];
						DateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
						if (hccDatetime.equals("NULL") || hccDatetime.equals("")) {
							hcconsume.setHccDatetime(null);
						} else {
							hcconsume.setHccDatetime(df.parse(hccDatetime));
						}
						hcconsume.setHccCreatetime(null);
						baseDao.save(hcconsume);
						count++;
					} catch (Exception e) {
						System.out.println("该行解析错误");
					}
				}
				//update Uploadfile开始 修改当前upId文件上传记录表(Uploadfile)字段:upCount解析文件总条数
				String upHql = "update Uploadfile u set u.upCount=?0 where u.upId=?1 ";
				baseDao.updateOrDelete(upHql, count, upId);
				System.out.println("解析当前*医保刷卡信息和参保用户*文件完毕,更新上传记录表统计条数完毕,共: "+ count +" 条");
				b = true;
			} else {
				System.out.println("文件不存在:" + path);
				return b;
			}
		} catch (Exception e) {
			System.out.println("解析文件错误:" + path + "错误行号:" + (count+1));
			System.out.println("当前行错误行:" + line);
			e.printStackTrace();
		} finally {
			if (bufr != null) {
				bufr.close();
			}
		}
		return b;
	}
}

package yibao.yiwei.controller;

import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;

import yibao.yiwei.entity.Itemstock;
import yibao.yiwei.service.IBaseService;
import yibao.yiwei.utils.Utils;

/**
 * 库存信息表
 */
@Controller
public class ItemstockController {
	
	@Autowired
	private IBaseService<Itemstock> baseService;

	/**
	 * 转到库存信息
	 * @param cusId
	 * @param request
	 * @return
	 */
	@RequestMapping("toItemstock")
	public String toItemstock(String cusId, HttpServletRequest request) {
		request.setAttribute("cusId", cusId);
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		Calendar cal = Calendar.getInstance();    
		cal.add(Calendar.MONTH, 0);
		cal.set(Calendar.DAY_OF_MONTH,1);
		request.setAttribute("startDate", sdf.format(cal.getTime()));
		request.setAttribute("endDate", sdf.format(Utils.getDate(1)));
		return "/itemstock/itemstock";
	}

	/**
	 * 库存信息表
	 * @param request
	 * @param response
	 * @throws IOException
	 * @throws ParseException
	 */
	@RequestMapping("getAllItemstock")
	public void getAllItemstock(HttpServletRequest request, HttpServletResponse response) throws IOException, ParseException {
		List<Itemstock> list = new ArrayList<Itemstock>();
		String rows = request.getParameter("rows");// 每页显示的记录数
		String page = request.getParameter("page");// 当前第几页
		String cusId = request.getParameter("cusId");// 当前cusId
		String startDate = request.getParameter("startDate") != null ? request.getParameter("startDate") : "";
		String endDate = request.getParameter("endDate") != null ? request.getParameter("endDate") : "";
		String itemName = request.getParameter("itemName") != null ? request.getParameter("itemName") : "";
		SimpleDateFormat sf = new SimpleDateFormat("yyyy-MM-dd");
		int count = 0;
		String countSql = "select count(IS_ID) from TBL_ITEMSTOCK where CUS_ID=?0 ";
		String hql = "from Itemstock where cusId=?0 ";
		if(!itemName.equals("")){
			countSql+=" and ITEM_NAME like '%"+itemName+"%'";
			hql+=" and itemName like '%"+itemName+"%'";
		}
		Date itemPicktime = null;
		Date itemPicktime2 = null;
		if (!startDate.equals("") && !endDate.equals("")) {
			itemPicktime = sf.parse(startDate);
			itemPicktime2 = sf.parse(endDate);
			countSql+=" and ITEM_ADDTIME between ?1 and ?2";
			hql+=" and itemAddtime between ?1 and ?2 order by itemAddtime desc";
			count = baseService.findCountSql(countSql,cusId,itemPicktime,itemPicktime2);
			list = baseService.findByPage(hql, rows, page,cusId,itemPicktime,itemPicktime2);
		}
		if (startDate.equals("") && endDate.equals("")) {
			hql+=" order by itemAddtime desc";
			count = baseService.findCountSql(countSql,cusId);
			list = baseService.findByPage(hql, rows, page,cusId);
		}
		if (startDate.equals("") && !endDate.equals("")) {
			itemPicktime2 = sf.parse(endDate);
			countSql+="and ITEM_ADDTIME <?1";
			hql+="and itemAddtime <?1 order by itemAddtime desc";
			count = baseService.findCountSql(countSql,cusId,itemPicktime2);
			list = baseService.findByPage(hql, rows, page,cusId,itemPicktime2);
		}
		if (!startDate.equals("") && endDate.equals("")) {
			itemPicktime = sf.parse(startDate);
			countSql+="and ITEM_ADDTIME >?1";
			hql+="and itemAddtime >?1 order by itemAddtime desc";
			count = baseService.findCountSql(countSql,cusId,itemPicktime);
			list = baseService.findByPage(hql, rows, page,cusId,itemPicktime);
		}
		Utils.toBeJson(list, count, response);
	}

}

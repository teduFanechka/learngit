package yibao.yiwei.controller;

import java.io.IOException;
import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import net.sf.json.JSONObject;
import net.sf.json.JsonConfig;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;

import yibao.yiwei.entity.Discharged;
import yibao.yiwei.service.IBaseService;
import yibao.yiwei.utils.JsonDateValueProcessor;

/**
 * 出院信息
 * @author Administrator
 *
 */
@Controller
public class DischargedController {
	
	@Autowired
	private IBaseService<Discharged> baseService;

	// 请求视图
	@RequestMapping("toDischarged")
	public String toDischarged(String cusId, HttpServletRequest request) {
		request.setAttribute("cusId", cusId);
		return "/discharged/discharged";
	}

	// datagrid分页 获取当前cusid条件查询总记录数
	@RequestMapping("getAllDischarged")
	public void getAllDischarged(HttpServletRequest request, HttpServletResponse response) throws IOException {
		List<Discharged> list;// 返回的结果集无论有没有条件查询
		String rows = request.getParameter("rows");// 每页显示的记录数
		String page = request.getParameter("page");// 当前第几页
		String cusId = request.getParameter("cusId");// 当前cusId
		String hql = "from Discharged d where d.cusId=?0 order by d.dcAddtime desc";
		String countHql = "select count(d.DC_ID) from tbl_Discharged d where d.cus_Id = ?0 ";
		int count = baseService.findCountSql(countHql, cusId);
		if (count > 0) {
			list = baseService.findByPage(hql, rows, page, cusId);
			toBeJson(list, count, response);
		}
	}

	// 转化为Json格式 ,将有Date 格式的list 转为json 可识别格式"2014-01-12 12:20:10"
	public void toBeJson(List<Discharged> list, int total, HttpServletResponse response) throws IOException {
		// 调用工具类 list(含有java.util.Date)转换成json
		JsonConfig jsonConfig = new JsonConfig();
		jsonConfig.registerJsonValueProcessor(Date.class,new JsonDateValueProcessor());
		JSONObject json = new JSONObject();// new一个JSONObject
		json.accumulate("total", total);// total代表一共有多少数据
		json.accumulate("rows", list, jsonConfig);// 增加一个经过转换的list
		response.setContentType("application/json;charset=UTF-8");// 指定为utf-8
		response.getWriter().write(json.toString());// 转化为JSOn格式
	}
}

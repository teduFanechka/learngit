package yibao.yiwei.dao;

import java.io.Serializable;
import java.util.List;

import org.hibernate.SessionFactory;

public interface IBaseDao<T> {
	
	/**
	 * getSessionFactory
	 * @return
	 */
	SessionFactory getSessionFactory();

	/**
	 * 查询
	 * @param entityClazz
	 * @return
	 */
	List<T> findAll(Class<T> entityClazz);
	
	/**
	 * 统计
	 * @param entityClazz
	 * @return
	 */
	int findCount(Class<T> entityClazz);
	
	/**
	 * 根据ID查询
	 * @param entityClazz
	 * @param id
	 * @return
	 */
	T get(Class<T> entityClazz, Serializable id);

	/**
	 * 保存
	 * @param entity
	 * @return
	 */
	Serializable save(T entity);

	/**
	 * 保存或更新
	 * @param entity
	 */
	void update(T entity);

	/**
	 * 删除
	 * @param entity
	 */
	void delete(T entity);

	/**
	 * 根据ID删除
	 * @param entityClazz
	 * @param id
	 */
	void delete(Class<T> entityClazz, Serializable id);
	
	/**
	 * hql查询
	 * @param hql
	 * @param objects
	 * @return
	 */
	List<T> find(String hql, Object... objects);
	
	/**
	 * hql统计
	 * @param hql
	 * @param objects
	 * @return
	 */
	int findCount(String hql, Object... objects);
	
	/**
	 * hql分页
	 * @param hql
	 * @param currentPage
	 * @param pageSize
	 * @param objects
	 * @return
	 */
	List<T> findByPage(String hql, int currentPage, int pageSize, Object... objects);
	
	/**
	 * hql增删改
	 * @param hql
	 * @param objects
	 * @return
	 */
	int updateOrDelete(String hql, Object... objects);
	
	/**
	 * sql查询
	 * @param sql
	 * @param objects
	 * @return
	 */
	List<T> findSql(String sql, Object... objects);
	
	/**
	 * sql查询转换实体
	 * @param sql
	 * @param tableName
	 * @param entityClazz
	 * @param objects
	 * @return
	 */
	List<T> findSql2(String sql,String tableName,Class<T> entityClazz, Object... objects);
	
	/**
	 * sql统计
	 * @param sql
	 * @param objects
	 * @return
	 */
	int findCountSql(String sql, Object... objects);
	
	/**
	 * sql分页
	 * @param sql
	 * @param currentPage
	 * @param pageSize
	 * @param objects
	 * @return
	 */
	List<T> findByPageSql(String sql, int currentPage, int pageSize, Object... objects);
	
	/**
	 * sql增删改
	 * @param sql
	 * @param objects
	 * @return
	 */
	int updateOrDeleteSql(String sql, Object... objects);
	
	/**
	 * 悲观锁查询
	 * @param hql
	 * @param entity
	 * @return
	 */
	List<T> find2(String hql,String entity);
	
	List<T> findDto(String sql,Class<T> entityClazz);
	
	List<T> findDto2(String sql,Class<T> entityClazz);

}
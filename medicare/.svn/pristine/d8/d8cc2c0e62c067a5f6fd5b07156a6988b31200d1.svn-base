package yibao.yiwei.controller;

import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;

import yibao.yiwei.entity.Prescribe;
import yibao.yiwei.service.IBaseService;
import yibao.yiwei.utils.Utils;

@Controller
public class PrescribeController {

	@Autowired
	private IBaseService<Prescribe> baseService;

	/**
	 * 转到处方信息
	 * @param request
	 * @return
	 */
	@RequestMapping("/toPrescribe")
	public String toPrescribe(HttpServletRequest request) {
		String cusId = request.getParameter("cusId");
		request.setAttribute("cusId", cusId);
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		Calendar cal = Calendar.getInstance();    
		cal.add(Calendar.MONTH, 0);
		cal.set(Calendar.DAY_OF_MONTH,1);
		request.setAttribute("startDate", sdf.format(cal.getTime()));
		request.setAttribute("endDate", sdf.format(Utils.getDate(1)));
		return "/prescribe/prescribe";
	}

	/**
	 * 处方信息
	 * @param request
	 * @param response
	 * @throws IOException
	 */
	@RequestMapping("/getAllPrescribe")
	public void getAllPrescribe(HttpServletRequest request, HttpServletResponse response,String rpItemname) throws IOException, ParseException {
		List<Prescribe> list = new ArrayList<Prescribe>();// 返回的结果集无论有没有条件查询
		String rows = request.getParameter("rows");// 每页显示的记录数
		String page = request.getParameter("page");// 当前第几页
		String cusId = request.getParameter("cusId");
		String startDate = request.getParameter("startDate") != null ? request.getParameter("startDate") : "";
		String endDate = request.getParameter("endDate") != null ? request.getParameter("endDate") : "";
		int count = 0;
		SimpleDateFormat sf = new SimpleDateFormat("yyyy-MM-dd");
		String hql = "from Prescribe where cusId=?0 ";
		String countSql = "select count(p.RP_ID) from tbl_Prescribe p where p.cus_Id=?0";

		if(null != rpItemname && !rpItemname.equals("")){
			rpItemname = rpItemname.trim();
			countSql+=" and (RP_ITEMNAME like '%"+rpItemname+"%')";
			hql+=" and (rpItemname like '%"+rpItemname+"%')";
		}
		
		Date itemPicktime = null;
		Date itemPicktime2 = null;
		if (!startDate.equals("") && !endDate.equals("")) {
			itemPicktime = sf.parse(startDate);
			itemPicktime2 = sf.parse(endDate);
			countSql+=" and RP_DRTIME between ?1 and ?2";
			hql+=" and rpDrtime between ?1 and ?2 order by rpDrtime desc nulls last";
			count = baseService.findCountSql(countSql,cusId,itemPicktime,itemPicktime2);
			list = baseService.findByPage(hql, rows, page,cusId,itemPicktime,itemPicktime2);
		}
		if (startDate.equals("") && endDate.equals("")) {
			hql+=" order by rpDrtime desc nulls last";
			count = baseService.findCountSql(countSql,cusId);
			list = baseService.findByPage(hql, rows, page,cusId);
		}
		if (startDate.equals("") && !endDate.equals("")) {
			itemPicktime2 = sf.parse(endDate);
			countSql+="and RP_DRTIME <?1";
			hql+="and rpDrtime <?1 order by rpDrtime desc nulls last";
			count = baseService.findCountSql(countSql,cusId,itemPicktime2);
			list = baseService.findByPage(hql, rows, page,cusId,itemPicktime2);
		}
		if (!startDate.equals("") && endDate.equals("")) {
			itemPicktime = sf.parse(startDate);
			countSql+="and RP_DRTIME >?1";
			hql+="and rpDrtime >?1 order by rpDrtime desc nulls last";
			count = baseService.findCountSql(countSql,cusId,itemPicktime);
			list = baseService.findByPage(hql, rows, page,cusId,itemPicktime);
		}
		Utils.toBeJson(list, count, response);
	}

	// 批量删除信息 return null; 返回string 也可以
	@RequestMapping("/delPrescribe")
	public void delPrescribe(HttpServletRequest request,HttpServletResponse response) {
		String ids = request.getParameter("ids");// 要批量删除的id字符串获取主键字符串 1,2,3
		String arr[] = ids.split(",");// 分隔为主键数组
		for (int i = 0; i < arr.length; i++) {
			baseService.updateOrDelete("delete Prescribe where rpId=?0",arr[i]);// 根据ID主键进行删除操作
		}
	}

}

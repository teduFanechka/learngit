package yibao.yiwei.controller;

import java.io.File;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

import org.apache.commons.fileupload.servlet.ServletFileUpload;
import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.commons.CommonsMultipartFile;

import yibao.yiwei.entity.Drugcatalog;
import yibao.yiwei.entity.Uploadfile;
import yibao.yiwei.service.IBaseService;
import yibao.yiwei.utils.Utils;

/**
 * 药品目录表
 */
@SuppressWarnings("all")
@Controller
public class DrugcatalogController {
	
	@Autowired
	private IBaseService baseService;

	/**
	 * 转到项目编码
	 * @param request
	 * @param cusId
	 * @param cusFlag
	 * @return
	 */
	@RequestMapping("/toDrugcatalog")
	public String toDrugcatalog(HttpServletRequest request, String cusId, String cusFlag) {
		request.setAttribute("cusId", cusId);
		request.setAttribute("cusFlag", cusFlag);
		return "/drugcatalog/drugcatalog";
	}

	// 新增或修改表格数据
	@RequestMapping("/addOrUpdateDrugcatalog ")
	public void addOrUpdateDrugcatalog(HttpServletRequest request, HttpServletResponse response) {
		// 获取jsonArray格式的字符串
		String jsonStr = request.getParameter("json");
		String dcId = null;// 定义主键
		String json = "";// 返回json 状态
		JSONArray jsonArray = new JSONArray();
		jsonArray = JSONArray.fromObject(jsonStr);
		Drugcatalog drugcatalog = new Drugcatalog();
		// 当jsonStr=[] 时,即没有修改任何数据jssonArray.size() =0
		if (jsonArray.size() > 0) {
			// 获取jsonArray第一个json对象 jsonObject
			JSONObject jsonObject = jsonArray.getJSONObject(0);
			// 验证所有必填项不为空
			if (jsonObject.size() > 0) {
				// 解析jsonObject 并获取实体字段值
				String cusId = jsonObject.getString("cusId");// 客户id
				String cusParentid = jsonObject.getString("cusParentid");// 客户上级Id
				String dcCode = jsonObject.getString("dcCode");// 药品编码（本地）
				String dcCategory = jsonObject.getString("dcCategory");// 药品类别
				String dcCommercial = jsonObject.getString("dcCommercial");// 品名
				String dcGenericname = jsonObject.getString("dcGenericname");// 通用名
				String dcMnemoniccode = jsonObject.getString("dcMnemoniccode");// 助记码
				String dcSpecification = jsonObject.getString("dcSpecification");// 规格
				String dcUnit = jsonObject.getString("dcUnit");// 单位
				String dcDosageform = jsonObject.getString("dcDosageform");// 剂型
				String dcPermission = jsonObject.getString("dcPermission");// 批准文号
				String dcMfrs = jsonObject.getString("dcMfrs");// 生产商
				String dcMakein = jsonObject.getString("dcMakein");// 产地
				String dcHcscode = jsonObject.getString("dcHcscode");// 药品编码(中心)
				drugcatalog.setCusId(cusId);
				drugcatalog.setCusParentid(cusParentid);
				drugcatalog.setDcCode(dcCode);
				drugcatalog.setDcPermission(dcPermission);
				drugcatalog.setDcHcscode(dcHcscode);
				drugcatalog.setDcDosageform(dcDosageform);
				drugcatalog.setDcGenericname(dcGenericname);
				drugcatalog.setDcMfrs(dcMfrs);
				drugcatalog.setDcCategory(dcCategory);
				drugcatalog.setDcMnemoniccode(dcMnemoniccode);
				drugcatalog.setDcMakein(dcMakein);
				drugcatalog.setDcCommercial(dcCommercial);
				drugcatalog.setDcSpecification(dcSpecification);
				drugcatalog.setDcUnit(dcUnit);

				// 如果等于14 就表示是有主键id,update一条表格数据 , 否则是新增一条表格数据
				if (jsonObject.size() == 15) {
					// 获取id主键
					dcId = jsonObject.getString("dcId");
					drugcatalog.setDcId(dcId);
					baseService.update(drugcatalog);
					json = "{ \"status\": \"update\" }";
				} else {
					baseService.save(drugcatalog);
					json = "{\"status\":\"add\"}";
				}
				try {
					response.setContentType("text/html;charset=utf-8");
					response.getWriter().write(json);
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}
	}

	/**
	 * 项目编码
	 * @param request
	 * @param cusId
	 * @param cusFlag
	 * @param response
	 * @throws IOException
	 */
	@RequestMapping("/getAllDrugcatalog")
	public void getAllDrugcatalog(HttpServletRequest request, String cusId, String cusFlag, HttpServletResponse response) throws IOException, ParseException {
		String rows = request.getParameter("rows");
		String page = request.getParameter("page");
		//判断是否为连锁药店,是查询id=parentid开始
		//药品目录,供应商二表共用信息listchainpharmacy.jsp,drugcatalog.jsp,drugcatalog.js等要添加参数cusFlag
		if (null != cusFlag && cusFlag.equals("102")) {
			String hql1 = "select cusParentid from Customer where cusId=?0";
			List plist = baseService.find(hql1, cusId);
			if (plist.get(0) != null) {
				String parentid = plist.get(0).toString();
				if (parentid.length() > 1) {
					cusId = parentid;
				}
			}
		}
		String countSql = "select count(DC_ID) from tbl_Drugcatalog where cus_Id=?0 ";
		String hql = "from Drugcatalog where cusId=?0 order by dcAddtime desc nulls last";
		int count = baseService.findCountSql(countSql,cusId);
		if(count>0){
			List<Drugcatalog> list = baseService.findByPage(hql, rows, page,cusId);
			Utils.toBeJson(list, count, response);
		}
	}
	
	// 批量删除信息
	@RequestMapping("/delDrugcatalog")
	public void delDrugcatalog(HttpServletRequest request, HttpServletResponse response) {
		String ids = request.getParameter("ids");// 获取主键字符串 1,2,3
		String arr[] = ids.split(",");// 分隔为主键数组
		for (int i = 0; i < arr.length; i++) {
			baseService.updateOrDelete("delete Drugcatalog where dcId=?0",arr[i]);// 根据ID主键进行删除操作
		}
		// return null; 返回string 也可以
	}

	/**
	 * 请求视图 Drug standard code 查找药品本位码
	 * 
	 * @param request
	 * @param response
	 * @return searchDSC
	 */
	@RequestMapping("/toSearchDSC")
	public String toSearchDSC(HttpServletRequest request, HttpServletResponse response) {
		return "/drugcatalog/searchDSC";
	}

	/**
	 * 按药品名称或本位码查询 Drug standard code
	 * 
	 * @param rows  每页显示的记录数
	 * @param page  当前第几页
	 * @param name 查询参数
	 * @param request
	 * @param response
	 * @return json
	 * @throws UnsupportedEncodingException
	 */
	@ResponseBody
	@RequestMapping("/getDSC")
	public Map getDSC(String rows, String page, String name, HttpServletRequest request, HttpServletResponse response) throws UnsupportedEncodingException {
		Map<String, Object> map = new HashMap<String, Object>();
		List list = new ArrayList();// 返回的结果集无论有没有条件查询
		name = URLDecoder.decode(name, "UTF-8");
		String countHql = "select count(d.cus_Id) from tbl_Customer c ,tbl_Drugcatalog d where c.cus_Id=d.cus_Id and (d.dc_Hcscode=?0 or d.dc_Commercial like'%" + name + "%')";
		int count = baseService.findCountSql(countHql, name);
		String hql = "select c.cusName,c.cusFlag,d.dcCommercial,d.dcMfrs,d.dcUnit,d.dcPrice,d.dcPackagingunit,d.dcPackagingnum,d.dcPackagingprice,d.dcHcscode "
				+ "from Customer c ,Drugcatalog d where c.cusId=d.cusId and (d.dcHcscode=?0 or d.dcCommercial like'%" + name + "%') order by d.dcHcscode";
		list = baseService.findByPage(hql, rows, page, name);
		map.put("rows", list);
		map.put("total", count);
		return map;
	}
}

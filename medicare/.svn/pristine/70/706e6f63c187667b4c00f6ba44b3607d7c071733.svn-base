package yibao.yiwei.service.impl;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.Date;

import org.hibernate.exception.DataException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import yibao.yiwei.dao.IBaseDao;
import yibao.yiwei.entity.Supplier;
import yibao.yiwei.entity.system.Errorlog;
import yibao.yiwei.service.ISupplierManager;

/**
 * 药品生产/供应商信息表
 * @author Administrator
 *
 */
@SuppressWarnings("unchecked")
@Service
@Transactional
public class SupplierManager implements ISupplierManager {
	
	@Autowired
	private IBaseDao baseDao;

	/**
	 * 添加药品生产/供应商信息表
	 */
	@Override
	public boolean addSuppliers(String path, String cusId, String cusName, Date upCollectdate, int upId) throws IOException {
		BufferedReader bufr = null;
		int count = 0;// 定义当行行号
		boolean b = false;// 定义解析是否正常
		String line = null;// 定义当前行
		String[] name = null;// 定义当前行String数组
		Supplier supplier;
		try {
			File file = new File(path);
			if (file.isFile()) {
				bufr = new BufferedReader(new FileReader(file));
				while ((line = bufr.readLine()) != null) {
					name = line.split("##");
					if (name.length < 14) {
						throw new DataException("异常信息:正确字段总数:14,实际解析字段数:" + name.length + ",数据不全解析停止", null);
					}
					for (int i = 0; i < name.length; i++) {
						if (null != name[i] && name[i].trim().equals("NULL")){
							name[i] = "";
						}
					}
					try{
						supplier = new Supplier();
						supplier.setCusId(cusId);
						supplier.setCusParentid("0");
						supplier.setSpCode(name[0].trim());
						supplier.setSpName(name[1].trim());
						supplier.setSpContact(name[2].trim());
						supplier.setSpPhone(name[3].trim());
						supplier.setSpCertificateno(name[4].trim());
						supplier.setSpQuality(name[5].trim());
						supplier.setSpAnnex(name[6].trim());
						supplier.setSpRemark("");
						supplier.setSpCat(name[6].trim());// 7 企业类别
						supplier.setSpPostcode(name[7].trim());// 8 邮政编码
						supplier.setSpEmail(name[8].trim());// 9 电子邮件
						supplier.setSpAddress(name[9].trim());// 10 详细地址
						supplier.setSpFax(name[10].trim());// 11 企业传真
						supplier.setSpStatus(name[13].trim());// 14 状态
						supplier.setCusDareway("");// 医院编码
						supplier.setAcCode("");// 统筹区划编码
						supplier.setAcName("");// 统筹区划名称
						supplier.setSpPicktime(upCollectdate);// 采集时间
						supplier.setSpAddtime(new Date());// 创建时间
						baseDao.save(supplier);
						count++;
					} catch (Exception e) {
						System.out.println("该行解析错误");
					}
				}
				String upHql = "update Uploadfile u set u.upCount=?0 where u.upId=?1 ";
				baseDao.updateOrDelete(upHql, count, upId);
				b = true;
			}
		} catch (Exception e) {
			String log = e.toString();
			if (log.length() > 400){
				log = log.substring(0, 300);
			}
			Errorlog errorlog = new Errorlog();
			errorlog.setCusId(cusId);
			errorlog.setCusName(cusName);
			errorlog.setErrAddtime(new Date());
			errorlog.setErrFileflag("供应商信息表");
			errorlog.setErrFilepath(path);
			errorlog.setErrLog(log + "\n错误行号:" + (count+1) + "  当前错误行内容:\n" + line);
			if (null !=name && name.length < 14) {
				errorlog.setErrType("数据上传字段不全错误");
			} else {
				errorlog.setErrType("数据解析错误");
			}
			baseDao.save(errorlog);
		} finally {
			if (null != bufr) {
				bufr.close();
			}
		}
		return b;
	}
}

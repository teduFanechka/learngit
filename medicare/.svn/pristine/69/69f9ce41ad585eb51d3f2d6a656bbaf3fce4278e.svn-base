package yibao.yiwei.service.impl;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.Date;
import java.util.List;

import org.hibernate.exception.DataException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import yibao.yiwei.dao.IBaseDao;
import yibao.yiwei.entity.Department;
import yibao.yiwei.entity.system.Errorlog;
import yibao.yiwei.service.IDepartmentManager;

@SuppressWarnings("unchecked")
@Service
@Transactional
public class DepartmentManager implements IDepartmentManager {
	
	@Autowired
	private IBaseDao baseDao;
	
	// 根据上传文件路径批量保存数据
	@Override
	public boolean addDepartment(String path, String cusId, String cusName, Date upCollectdate, int upId, String cusFlag) throws IOException {
		FileReader fr;
		BufferedReader bufr = null;
		int count = 0;// 定义当行行号
		boolean b = false;// 定义解析是否正常
		String line = null;// 定义当前行
		String[] name = null;// 定义当前行String数组
		Errorlog errorlog = new Errorlog();
		Department department;
		try {
			File file = new File(path);
			if (file.isFile()) {
				fr = new FileReader(file);
				bufr = new BufferedReader(fr);
				while ((line = bufr.readLine()) != null) {
					name = line.split("##");
					// 上传文件解析不正确,可能为数据不全
					if (name.length < 5) {
						throw new DataException("异常信息:正确字段总数:5,实际解析字段数:" + name.length + ",数据不全解析停止", null);
					}
					//判断定点是否连锁,数据解析至分店cusid下
					// 判断定点类型是连锁药店并且上传有最后一位分店编码
					department = new Department();
					if (cusFlag.equals("102") && name.length > 5) {// length:25
						String branchcode = name[5].trim();
						// 分店标识为零,则保存在总店id下
						if (branchcode.equals("0")) {
							department.setCusId(cusId);
						} else {
							// 查找分店id,父id是当前cusid,分店编码为name[]最后一位
							String hql = "select c.cusId from Customer c where c.cusParentid =?0 and c.cusBranchcode=?1 ";
							//ICustomerManager customerManager = (ICustomerManager) SpringContextUtils.getBean("customerManager");
							// 注意双重事物提交
							List list = baseDao.find(hql, cusId,branchcode);
							if (list.size() > 0) {
								// 分店已注册查找到分店id
								String newcusid = list.get(0).toString();
								department.setCusId(newcusid);
							} else {// 如果当前分店编码未注册,执行下次循环
								// warehouseitem.setCusId(cusId);
								continue;
							}
						}
					} else {
						department.setCusId(cusId);
					}
					department.setCusDareway(""); // 医院编码
					department.setCusPid("");// 客户上级id
					department.setDeptAddtime(new Date());// 创建日期
					department.setDeptPicktime(upCollectdate);// 采集日期从传来的文件采集时间获取
					department.setDeptCode(name[0].trim());// 科室编码1
					department.setDeptName(name[1].trim());// 科室名称2
					department.setDeptBeds(name[2].trim());// 床位数3
					department.setDeptEmps(name[3].trim());// 医护人员数4
					department.setDeptStatus(name[4].trim());// 状态5
					baseDao.save(department);
					count++;
				}
				//update Uploadfile开始
				//修改当前upId文件上传记录表(Uploadfile)字段:upCount解析文件总条数
				String upHql = "update Uploadfile u set u.upCount=?0 where u.upId=?1 ";
				baseDao.updateOrDelete(upHql, count, upId);
				//System.out.println("解析当前*科室信息*文件完毕,更新上传记录表统计条数完毕,共: " + count + " 条");
				b = true;
			} else {
				//System.out.println("文件不存在:" + path);
				return b;
			}
		} catch (Exception e) {
			String log = e.toString();
			if (log.length() > 400){
				log = log.substring(0, 300);
			}
			// 上传文件解析不正确,可能为数据不全
			errorlog.setCusId(cusId);
			errorlog.setCusName(cusName);
			errorlog.setErrAddtime(new Date());
			errorlog.setErrFileflag("科室信息表");
			errorlog.setErrFilepath(path);
			errorlog.setErrLog(log + "\n错误行号:" + (count+1) + "  当前错误行内容:\n" + line);
			if (null !=name && name.length < 5) {
				errorlog.setErrType("数据上传字段不全错误");
			} else {
				errorlog.setErrType("数据解析错误");
			}
			baseDao.save(errorlog);
		} finally {
			if (bufr != null) {
				bufr.close();
			}
		}
		return b;
	}
}
